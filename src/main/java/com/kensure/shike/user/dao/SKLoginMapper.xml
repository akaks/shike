<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kensure.shike.user.dao.SKLoginDao"><!--dsName="" saasAspect=""-->
	<!-- <cache readOnly="true"/> -->
    <sql id="allFields">
		id,
		sessionid,
		userid,
		agentno,
		agentno_type as agentnoType,
		cip,
		dip,
		status,
		created_time as createdTime,
		updated_time as updatedTime,
		invalid_time as invalidTime
    </sql>
    
	<sql id="insertFields">
		id,
		sessionid,
		userid,
		agentno,
		agentno_type,
		cip,
		dip,
		status,
		created_time,
		updated_time,
		invalid_time
    </sql>
	
	<insert id="insert" parameterType="com.kensure.shike.user.model.SKLogin">
		insert into sk_login (<include refid="insertFields"/>)
		values (
			#{id},
			#{sessionid},
			#{userid},
			#{agentno},
			#{agentnoType},
			#{cip},
			#{dip},
			#{status},
			#{createdTime},
			#{updatedTime},
			#{invalidTime}
		)
	</insert>
	
	<insert id="insertInBatch" parameterType="com.kensure.shike.user.model.SKLogin">
		insert into sk_login (<include refid="insertFields"/>) values 
		<foreach collection="list" item="item" index="index" separator=",">
			(
				#{item.id},
				#{item.sessionid},
				#{item.userid},
				#{item.agentno},
				#{item.agentnoType},
				#{item.cip},
				#{item.dip},
				#{item.status},
				#{item.createdTime},
				#{item.updatedTime},
				#{item.invalidTime}
			)
		</foreach>
	</insert>   		
	
    <sql id="whereClause">
		<if test="sessionid != null">			
			sessionid = #{sessionid}			
		</if>
		<if test="userid != null">			
			and userid = #{userid}			
		</if>
		<if test="agentno != null">			
			and agentno = #{agentno}			
		</if>
		<if test="agentnoType != null">			
			and agentno_type = #{agentnoType}			
		</if>
		<if test="cip != null">			
			and cip = #{cip}			
		</if>
		<if test="dip != null">			
			and dip = #{dip}			
		</if>
		<if test="status != null">			
			and status = #{status}			
		</if>
		<if test="createdTime != null">			
			and created_time = #{createdTime}			
		</if>
		<if test="updatedTime != null">			
			and updated_time = #{updatedTime}			
		</if>
		<if test="invalidTime != null">			
			and invalid_time = #{invalidTime}			
		</if>
	</sql>
    
	<select id="selectOne" resultType="com.kensure.shike.user.model.SKLogin" parameterType="Long" >
		select <include refid="allFields"/> 
		  from sk_login 
		 where id = #{id} 
	</select>
	
	<select id="selectByIds" parameterType="List" resultType="com.kensure.shike.user.model.SKLogin">
		select <include refid="allFields"/> from sk_login 
		where id in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</select>
		
	<select id="selectAll" resultType="com.kensure.shike.user.model.SKLogin">
		select <include refid="allFields"/> 
		from sk_login 
	</select>

	<select id="selectCount" resultType="long">
		select count(*) from sk_login 
	</select>
	
	<select id="selectCountByWhere" parameterType="Map" resultType="Long">
		select count(*) from sk_login 
		<where>
		    <include refid="whereClause"/>
		</where>
	</select>

	<select id="selectByWhere" parameterType="Map" resultType="com.kensure.shike.user.model.SKLogin">
		select <include refid="allFields"/>
		from sk_login 
		<where>
		    <include refid="whereClause"/>
		</where>				
		<if test="orderby != null">
			ORDER BY ${orderby}
		</if>
	</select>
	
	<sql id="setComn">		
		<if test="sessionid != null">
			sessionid = #{sessionid},
		</if>
		<if test="userid != null">
			userid = #{userid},
		</if>
		<if test="agentno != null">
			agentno = #{agentno},
		</if>
		<if test="agentnoType != null">
			agentno_type = #{agentnoType},
		</if>
		<if test="cip != null">
			cip = #{cip},
		</if>
		<if test="dip != null">
			dip = #{dip},
		</if>
		<if test="status != null">
			status = #{status},
		</if>
		<if test="createdTime != null">
			created_time = #{createdTime},
		</if>
		<if test="updatedTime != null">
			updated_time = #{updatedTime},
		</if>
		<if test="invalidTime != null">
			invalid_time = #{invalidTime}
		</if>
	</sql>
	
	<update id="update" parameterType="com.kensure.shike.user.model.SKLogin">
		 update sk_login 
		    <set>
		    	<include refid="setComn"/>
			</set>
		  where id = #{id}
	</update>
	
	<update id="updateByMap" parameterType="Map">
		 update sk_login 
		    <set>
		    	<include refid="setComn"/>
			</set>
		  where id = #{id}
	</update>
	
	<delete id="delete">
		delete from sk_login where id = #{id}
	</delete>
	
	<delete id="deleteMulti" parameterType="List">
		delete from sk_login
		where id in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>
	
	<delete id="deleteByWhere" parameterType="Map">
		delete from sk_login 
		<where>
		    <include refid="whereClause"/>
		</where>
	</delete>	

</mapper>    
